{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\recipe-sharing-main\\\\client\\\\src\\\\components\\\\PrivateRoute.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { Navigate, Outlet } from 'react-router-dom'\nconst PrivateRoutes = () => {\n  let auth = {\n    'token': true\n  };\n  return auth.token ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 18\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 30\n  }, this);\n};\n_c = PrivateRoutes;\nexport default PrivateRoutes;\n\n// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext'; // Assuming you have an AuthContext for managing authentication\n\n// const PrivateRoute = ({ element }) => {\n//   const { isLoggedIn } = useAuth(); // Replace useAuth with your authentication context hook\n\n//   return isLoggedIn ? element : <Navigate to=\"/login\" />;\n// };\n\n// export default PrivateRoute;\n\n// import React from 'react';\n// import { Route, Navigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext';\n\n// const PrivateRoute = ({ element: Element, ...rest }) => {\n//   const { isLoggedIn } = useAuth();\n\n//   return (\n//     isLoggedIn ? (\n//       <Route {...rest} element={<Element />} />\n//     ) : (\n//       <Navigate to=\"/login\" replace />\n//     )\n//   );\n// };\n\n// export default PrivateRoute;\n\n// import React from 'react';\n// import { Route, Navigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext';\n\n// const PrivateRoute = ({ element, ...rest }) => {\n//   const { isLoggedIn } = useAuth();\n\n//   return isLoggedIn ? (\n//     <Route {...rest} element={element} />\n//   ) : (\n//     <Navigate to=\"/login\" replace />\n//   );\n// };\n\n// export default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["PrivateRoutes","auth","token","_jsxDEV","Outlet","fileName","_jsxFileName","lineNumber","columnNumber","Navigate","to","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/recipe-sharing-main/client/src/components/PrivateRoute.js"],"sourcesContent":["// import { Navigate, Outlet } from 'react-router-dom'\r\nconst PrivateRoutes = () => {\r\n  let auth = {'token':true}\r\nreturn (\r\n    auth.token ? <Outlet/> : <Navigate to='/login'/>\r\n  )\r\n}\r\nexport default PrivateRoutes;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n// import { useAuth } from './AuthContext'; // Assuming you have an AuthContext for managing authentication\r\n\r\n// const PrivateRoute = ({ element }) => {\r\n//   const { isLoggedIn } = useAuth(); // Replace useAuth with your authentication context hook\r\n\r\n//   return isLoggedIn ? element : <Navigate to=\"/login\" />;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Route, Navigate } from 'react-router-dom';\r\n// import { useAuth } from './AuthContext';\r\n\r\n// const PrivateRoute = ({ element: Element, ...rest }) => {\r\n//   const { isLoggedIn } = useAuth();\r\n\r\n//   return (\r\n//     isLoggedIn ? (\r\n//       <Route {...rest} element={<Element />} />\r\n//     ) : (\r\n//       <Navigate to=\"/login\" replace />\r\n//     )\r\n//   );\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n\r\n// import React from 'react';\r\n// import { Route, Navigate } from 'react-router-dom';\r\n// import { useAuth } from './AuthContext';\r\n\r\n// const PrivateRoute = ({ element, ...rest }) => {\r\n//   const { isLoggedIn } = useAuth();\r\n\r\n//   return isLoggedIn ? (\r\n//     <Route {...rest} element={element} />\r\n//   ) : (\r\n//     <Navigate to=\"/login\" replace />\r\n//   );\r\n// };\r\n\r\n// export default PrivateRoute;\r\n"],"mappings":";;AAAA;AACA,MAAMA,aAAa,GAAGA,CAAA,KAAM;EAC1B,IAAIC,IAAI,GAAG;IAAC,OAAO,EAAC;EAAI,CAAC;EAC3B,OACIA,IAAI,CAACC,KAAK,gBAAGC,OAAA,CAACC,MAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,gBAAGL,OAAA,CAACM,QAAQ;IAACC,EAAE,EAAC;EAAQ;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEpD,CAAC;AAAAG,EAAA,GALKX,aAAa;AAMnB,eAAeA,aAAa;;AAI5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}