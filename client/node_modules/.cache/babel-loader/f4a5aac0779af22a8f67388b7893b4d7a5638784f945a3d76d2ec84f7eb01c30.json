{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\recipe-sharing-main\\\\client\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isLoggedIn\n  } = useAuth();\n  return isLoggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 34\n  }, this);\n};\n_s(PrivateRoute, \"Jbx0LrCfdz/EDenJV2YbpvzQ6CY=\", true);\n_c = PrivateRoute;\nexport default PrivateRoute;\n\n// import React from 'react';\n// import { Route, Navigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext';\n\n// const PrivateRoute = ({ children, ...rest }) => {\n//   const { isLoggedIn } = useAuth();\n\n//   return (\n//     <Route\n//       {...rest}\n//       render={({ location }) =>\n//         isLoggedIn ? (\n//           children\n//         ) : (\n//           <Navigate\n//             to={{\n//               pathname: \"/login\",\n//               state: { from: location }\n//             }}\n//           />\n//         )\n//       }\n//     />\n//   );\n// };\n\n// export default PrivateRoute;\n\n// import { Navigate, Outlet } from 'react-router-dom'\n// const PrivateRoutes = () => {\n//   let auth = {'token':true}\n// return (\n//     auth.token ? <Outlet/> : <Navigate to='/login'/>\n//   )\n// }\n// export default PrivateRoutes;\n\n// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext'; // Assuming you have an AuthContext for managing authentication\n\n// const PrivateRoute = ({ element }) => {\n//   const { isLoggedIn } = useAuth(); // Replace useAuth with your authentication context hook\n\n//   return isLoggedIn ? element : <Navigate to=\"/login\" />;\n// };\n\n// export default PrivateRoute;\n\n// import React from 'react';\n// import { Route, Navigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext';\n\n// const PrivateRoute = ({ element: Element, ...rest }) => {\n//   const { isLoggedIn } = useAuth();\n\n//   return (\n//     isLoggedIn ? (\n//       <Route {...rest} element={<Element />} />\n//     ) : (\n//       <Navigate to=\"/login\" replace />\n//     )\n//   );\n// };\n\n// export default PrivateRoute;\n\n// import React from 'react';\n// import { Route, Navigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext';\n\n// const PrivateRoute = ({ element, ...rest }) => {\n//   const { isLoggedIn } = useAuth();\n\n//   return isLoggedIn ? (\n//     <Route {...rest} element={element} />\n//   ) : (\n//     <Navigate to=\"/login\" replace />\n//   );\n// };\n\n// export default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["PrivateRoute","children","_s","isLoggedIn","useAuth","_jsxDEV","Navigate","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/recipe-sharing-main/client/src/components/PrivateRoute.js"],"sourcesContent":["const PrivateRoute = ({ children }) => {\r\n  const { isLoggedIn } = useAuth();\r\n\r\n  return isLoggedIn ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n\r\n// import React from 'react';\r\n// import { Route, Navigate } from 'react-router-dom';\r\n// import { useAuth } from './AuthContext';\r\n\r\n// const PrivateRoute = ({ children, ...rest }) => {\r\n//   const { isLoggedIn } = useAuth();\r\n\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={({ location }) =>\r\n//         isLoggedIn ? (\r\n//           children\r\n//         ) : (\r\n//           <Navigate\r\n//             to={{\r\n//               pathname: \"/login\",\r\n//               state: { from: location }\r\n//             }}\r\n//           />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n\r\n// import { Navigate, Outlet } from 'react-router-dom'\r\n// const PrivateRoutes = () => {\r\n//   let auth = {'token':true}\r\n// return (\r\n//     auth.token ? <Outlet/> : <Navigate to='/login'/>\r\n//   )\r\n// }\r\n// export default PrivateRoutes;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n// import { useAuth } from './AuthContext'; // Assuming you have an AuthContext for managing authentication\r\n\r\n// const PrivateRoute = ({ element }) => {\r\n//   const { isLoggedIn } = useAuth(); // Replace useAuth with your authentication context hook\r\n\r\n//   return isLoggedIn ? element : <Navigate to=\"/login\" />;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Route, Navigate } from 'react-router-dom';\r\n// import { useAuth } from './AuthContext';\r\n\r\n// const PrivateRoute = ({ element: Element, ...rest }) => {\r\n//   const { isLoggedIn } = useAuth();\r\n\r\n//   return (\r\n//     isLoggedIn ? (\r\n//       <Route {...rest} element={<Element />} />\r\n//     ) : (\r\n//       <Navigate to=\"/login\" replace />\r\n//     )\r\n//   );\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n\r\n// import React from 'react';\r\n// import { Route, Navigate } from 'react-router-dom';\r\n// import { useAuth } from './AuthContext';\r\n\r\n// const PrivateRoute = ({ element, ...rest }) => {\r\n//   const { isLoggedIn } = useAuth();\r\n\r\n//   return isLoggedIn ? (\r\n//     <Route {...rest} element={element} />\r\n//   ) : (\r\n//     <Navigate to=\"/login\" replace />\r\n//   );\r\n// };\r\n\r\n// export default PrivateRoute;\r\n"],"mappings":";;;AAAA,MAAMA,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAW,CAAC,GAAGC,OAAO,CAAC,CAAC;EAEhC,OAAOD,UAAU,GAAGF,QAAQ,gBAAGI,OAAA,CAACC,QAAQ;IAACC,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAACT,EAAA,CAJIF,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAMlB,eAAeA,YAAY;;AAG3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}